/*
    Even Fibonacci numbers
    ---
    http://projecteuler.net/problem=2

    Problem 2
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
f(0) = 0
f(1) = 1 = 0 + 1
f(2) = 2 = f(1) + f(0)
f(3) = 3 = f(2) + f(1)
f(4) = 5 = f(3) + f(2)
...
f(n) = f(n-1) + f(n-2)



// My soln
//---
var myFunct = {
    fib : function(lim) {
        var i = 2,
            fibNum = [1, 1], //seeded with (f0, f1)
            fibSum = 0;

        for (; i <= lim; i += 1) {
            fibNum[i] = fibNum[i-1] + fibNum[i-2];

            if (fibNum[i] > 4000000) {
                return fibSum;
            }
            else if (fibNum[i] % 2 === 0) {
                fibSum += fibNum[i];
            }
        }
        return fibSum;
        //(fibNum[lim], fibSum);
    }
};

myFunct.fib(100); // 33rd fib num, 4613732


// improvements

// 1. find max index less than 4,000,000
// 2. feed into myFunct.fib(max);




